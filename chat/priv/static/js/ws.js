// Generated by CoffeeScript 1.9.3
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.WSocket = (function() {
    WSocket.prototype.timeout = 10000;

    function WSocket(url) {
      this.url = url;
      this.keepalive = bind(this.keepalive, this);
      this.ping = bind(this.ping, this);
      this.send = bind(this.send, this);
      this.onFilterMessage = bind(this.onFilterMessage, this);
      this.onClose = bind(this.onClose, this);
      this.onOpen = bind(this.onOpen, this);
      this.timeout = 10000;
      this.connect(this.url);
    }

    WSocket.prototype.connect = function() {
      console.log("ws connect");
      this.websocket = new WebSocket(this.url);
      this.websocket.onopen = this.onOpen;
      this.websocket.onclose = this.onClose;
      return this.websocket.onmessage = this.onFilterMessage;
    };

    WSocket.prototype.onOpen = function(evt) {
      this.keepalive();
    };

    WSocket.prototype.onClose = function(evt) {};

    WSocket.prototype.onFilterMessage = function(evt) {
      var message;
      message = JSON.parse(evt.data);
      if (message.type === "pong") {
        return;
      }
      return this.onMessage(message);
    };

    WSocket.prototype.send = function(msg) {
      return this.websocket.send(msg);
    };

    WSocket.prototype.ping = function() {
      this.websocket.send(JSON.stringify({
        'type': 'ping'
      }));
      return this.keepalive();
    };

    WSocket.prototype.keepalive = function() {
      return setTimeout(this.ping, this.timeout);
    };

    return WSocket;

  })();

}).call(this);
