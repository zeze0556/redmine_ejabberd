// Generated by CoffeeScript 1.9.3
(function() {
  window.KLine = (function() {
    KLine.prototype.sum = function(data, start, end) {
      var j, n, ref, ref1, ret;
      ret = 0;
      for (n = j = ref = start, ref1 = end; ref <= ref1 ? j < ref1 : j > ref1; n = ref <= ref1 ? ++j : --j) {
        ret += data[n][1];
      }
      return ret;
    };

    KLine.prototype.ma = function(data, day) {
      var i, j, ref, result, sum_v;
      result = [];
      for (i = j = 0, ref = data.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        if (i < day) {
          result.push('-');
          continue;
        }
        sum_v = this.sum(data, i - day, i);
        result.push(+(sum_v / day).toFixed(3));
      }
      return result;
    };

    KLine.prototype.ema = function(data, day) {
      var i, j, nLen, ref, result;
      result = [];
      nLen = data.length;
      if (nLen >= 1) {
        if (day > nLen) {
          day = nLen;
        }
        result[0] = data[0][1];
        for (i = j = 1, ref = nLen; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {
          result[i] = +((2 * data[i][1] + (day - 1) * result[i - 1]) / (day + 1)).toFixed(3);
        }
      }
      return result;
    };

    KLine.prototype.onMessage = function(evt) {
      var c, j, len, price, ref, t;
      console.log(evt);
      if (evt.type === "trade") {
        ref = evt.data;
        for (j = 0, len = ref.length; j < len; j++) {
          c = ref[j];
          t = c.time / 1000;
          if (t === this.lasttime) {
            price = [c.data.open, c.data.close, c.data.low, c.data.high];
            this.data.price[this.data.price.length - 1] = price;
            this.data.volums[this.data.volums.length - 1] = c.data.volumn;
          } else {
            this.lasttime = t;
            if (this.data.time.length > this.maxline) {
              this.data.time.shift();
            }
            if (this.data.price.length > this.maxline) {
              this.data.price.shift();
            }
            if (this.data.volums.length > this.maxline) {
              this.data.volums.shift();
            }
            this.data.time.push((new Date(t * 1000)).toLocaleString());
            price = [c.data.open, c.data.close, c.data.low, c.data.high];
            this.data.price.push(price);
            this.data.volums.push(c.data.volumn);
          }
          console.log(this.data);
        }
      }
      return this.charts.setOption({
        xAxis: [
          {
            data: this.data.time
          }, {
            data: this.data.time
          }
        ],
        series: [
          {
            name: "日K",
            data: this.data.price
          }, {
            name: "MA5",
            data: this.ma(this.data.price, 5)
          }, {
            name: "MA10",
            data: this.ma(this.data.price, 10)
          }, {
            name: "MA20",
            data: this.ma(this.data.price, 20)
          }, {
            name: "MA30",
            data: this.ema(this.data.price, 5)
          }, {
            name: "Volumn",
            data: this.data.volums
          }
        ]
      });
    };

    function KLine(node, option) {
      this.node = node;
      this.option = option != null ? option : null;
      console.log(this.node);
      this.maxline = 30;
      this.data = {
        time: [],
        price: [],
        volums: []
      };
      this.lasttime = 0;
      this.charts = echarts.init(this.node);
      if (this.option === null) {
        this.option = {
          title: {
            text: 'ECharts 入门示例'
          },
          tooltip: {},
          legend: {
            data: ['销量']
          },
          xAxis: {
            data: ["衬衫", "羊毛衫", "雪纺衫", "裤子", "高跟鞋", "袜子"]
          },
          yAxis: {},
          series: [
            {
              name: '销量',
              type: 'bar',
              data: [5, 20, 36, 10, 10, 20]
            }
          ]
        };
      }
      this.charts.setOption(this.option);
      this;
    }

    return KLine;

  })();

}).call(this);
